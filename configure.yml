- hosts: all
  remote_user: ubuntu
  gather_facts: yes
  become: yes

  vars:
      stack_version: 8.13.0
      otel_demo_version: 1.4.0 # helm chart version 0.23.0
      ubuntu_version: focal
      ansible_python_interpreter: /usr/bin/python3

  tasks:

    - name: Update and upgrade apt packages
      apt:
        upgrade: dist
        force_apt_get: yes

    - name: Change the mmap to a reasonable size
      shell: sysctl -w vm.max_map_count=262144

    - name: Install some developer tools
      apt:
        name:
          - ntp
          - ntpdate
          - curl
          - gnupg-agent
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - whois
          - jq
          - zsh
        update_cache: yes
        force_apt_get: yes

    - name: Install Ansible dependencies
      pip:
        name: docker

    - name: Install Docker's fingerprint
      apt_key:
        id: 0EBFCD88
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Install Docker's repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version }} stable
        state: present

    - name: Install Docker's binaries
      apt:
        name:
          - docker-ce
          - docker-ce-cli
        force_apt_get: yes

    - name: Start and enable the Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Fetch Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      loop: "{{ lookup('ansible.builtin.template', 'images.j2').splitlines() }}"

    - name: Download Minikube
      shell: "curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"

    - name: Install Minikube
      shell: "install minikube-linux-amd64 /usr/local/bin/minikube"

    - name: Add user in docker group
      shell: "sudo usermod -aG docker $USER && newgrp docker"
      become: no

    - name: Create Minikube service
      copy:
        dest: "/etc/systemd/system/minikube.service"
        content: |
          [Unit]
          Description=Kickoff Minikube Cluster
          After=docker.service

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/minikube start --memory 8192 --cpus 4
          RemainAfterExit=true
          ExecStop=/usr/local/bin/minikube stop
          StandardOutput=journal
          User=ubuntu
          Group=ubuntu

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start minikube service
      systemd:
        name: minikube
        state: started
        enabled: true

    - name: Install Kubectl and Helm
      snap:
        name:
          - kubectl
          - helm
        classic: true

    - name: Kubectl autocomplete + alias
      become: no
      lineinfile:
        dest: ~/.bashrc
        line: "{{ item }}"
      loop:
        - source <(kubectl completion bash)
        - alias k="kubectl"
        - complete -o default -F __start_kubectl k

    - name: Create the workshop directory
      become: no
      file:
        path: ~/workshop
        state: directory
        mode: '0755'

    - name: Create empty Elastic Agent manifest file
      file:
        path: ~/workshop/elastic-agent.yaml
        state: touch
      become: no

    - name: Template Elastic Agent manifest file for Defend for Containers
      template:
        src: manifest.yaml.j2
        dest: ~/workshop/elastic-agent-defend.yaml
      become: no

    - name: Clone OpenTelemetry demo
      git:
        repo: 'https://github.com/elastic/opentelemetry-demo.git'
        dest: ~/workshop/opentelemetry-demo
      become: no